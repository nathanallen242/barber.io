diff --git a/node_modules/react-native-country-picker-modal/lib/CountryFilter.js b/node_modules/react-native-country-picker-modal/lib/CountryFilter.js
index 28b0dc4..237a1cd 100644
--- a/node_modules/react-native-country-picker-modal/lib/CountryFilter.js
+++ b/node_modules/react-native-country-picker-modal/lib/CountryFilter.js
@@ -21,8 +21,8 @@ export const CountryFilter = (props) => {
             { fontFamily, fontSize, color: onBackgroundTextColor }
         ] }, props)));
 };
-CountryFilter.defaultProps = {
-    autoFocus: false,
-    placeholder: 'Enter country name'
-};
+// CountryFilter.defaultProps = {
+//     autoFocus: false,
+//     placeholder: 'Enter country name'
+// };
 //# sourceMappingURL=CountryFilter.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-country-picker-modal/lib/CountryList.js b/node_modules/react-native-country-picker-modal/lib/CountryList.js
index 8816018..9f27f8f 100644
--- a/node_modules/react-native-country-picker-modal/lib/CountryList.js
+++ b/node_modules/react-native-country-picker-modal/lib/CountryList.js
@@ -51,7 +51,7 @@ const Letter = ({ letter, scrollTo }) => {
 };
 const CountryItem = (props) => {
     const { activeOpacity, itemHeight, flagSize } = useTheme();
-    const { country, onSelect, withFlag, withEmoji, withCallingCode, withCurrency, } = props;
+    const { country, onSelect, withFlag=true, withEmoji, withCallingCode=false, withCurrency, } = props;
     const extraContent = [];
     if (withCallingCode &&
         country.callingCode &&
@@ -69,10 +69,10 @@ const CountryItem = (props) => {
                     country.name,
                     extraContent.length > 0 && ` (${extraContent.join(', ')})`)))));
 };
-CountryItem.defaultProps = {
-    withFlag: true,
-    withCallingCode: false,
-};
+// CountryItem.defaultProps = {
+//     withFlag: true,
+//     withCallingCode: false,
+// };
 const MemoCountryItem = memo(CountryItem);
 const renderItem = (props) => ({ item: country, }) => (React.createElement(MemoCountryItem, Object.assign({}, { country, ...props })));
 const keyExtractor = (item) => item.cca2;
@@ -82,7 +82,7 @@ const ItemSeparatorComponent = () => {
 };
 const { height } = Dimensions.get('window');
 export const CountryList = (props) => {
-    const { data, withAlphaFilter, withEmoji, withFlag, withCallingCode, withCurrency, onSelect, filter, flatListProps, filterFocus, } = props;
+    const { data, withAlphaFilter, withEmoji, withFlag, withCallingCode, withCurrency, onSelect, filter, flatListProps, filterFocus=undefined, } = props;
     const flatListRef = useRef(null);
     const [letter, setLetter] = useState('');
     const { itemHeight, backgroundColor } = useTheme();
@@ -130,7 +130,7 @@ export const CountryList = (props) => {
         }, flatListProps)),
         withAlphaFilter && (React.createElement(ScrollView, { contentContainerStyle: styles.letters, keyboardShouldPersistTaps: 'always' }, letters.map(letter => (React.createElement(Letter, Object.assign({ key: letter }, { letter, scrollTo }))))))));
 };
-CountryList.defaultProps = {
-    filterFocus: undefined,
-};
+// CountryList.defaultProps = {
+//     filterFocus: undefined,
+// };
 //# sourceMappingURL=CountryList.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-country-picker-modal/lib/CountryModal.js b/node_modules/react-native-country-picker-modal/lib/CountryModal.js
index 1678e95..442b452 100644
--- a/node_modules/react-native-country-picker-modal/lib/CountryModal.js
+++ b/node_modules/react-native-country-picker-modal/lib/CountryModal.js
@@ -9,30 +9,30 @@ const styles = StyleSheet.create({
         flex: 1,
     },
 });
-export const CountryModal = ({ children, withModal, disableNativeModal, ...props }) => {
+export const CountryModal = ({ children, withModal=true, disableNativeModal=false, animationType='slide', ...props }) => {
     const { backgroundColor } = useTheme();
     const { teleport } = React.useContext(CountryModalContext);
     const content = (React.createElement(SafeAreaView, { style: [styles.container, { backgroundColor }] }, children));
     React.useEffect(() => {
         if (disableNativeModal) {
-            teleport(React.createElement(AnimatedModal, Object.assign({}, props), content));
+            teleport(React.createElement(AnimatedModal, Object.assign({}, {...props, animationType:'slide', disableNativeModal: false,withModal:true}), content));
         }
     }, [disableNativeModal]);
     if (withModal) {
         if (Platform.OS === 'web') {
-            return React.createElement(Modal, Object.assign({}, props), content);
+            return React.createElement(Modal, Object.assign({}, {...props, animationType:'slide', disableNativeModal: false,withModal:true}), content);
         }
         if (disableNativeModal) {
             return null;
         }
-        return React.createElement(Modal, Object.assign({}, props), content);
+        return React.createElement(Modal, Object.assign({}, {...props, animationType:'slide', disableNativeModal: false,withModal:true}), content);
     }
     return content;
 };
-CountryModal.defaultProps = {
-    animationType: 'slide',
-    animated: true,
-    withModal: true,
-    disableNativeModal: false,
-};
+// CountryModal.defaultProps = {
+//     animationType: 'slide',
+//     animated: true,
+//     withModal: true,
+//     disableNativeModal: false,
+// };
 //# sourceMappingURL=CountryModal.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-country-picker-modal/lib/CountryPicker.js b/node_modules/react-native-country-picker-modal/lib/CountryPicker.js
index c4ba18e..4196484 100644
--- a/node_modules/react-native-country-picker-modal/lib/CountryPicker.js
+++ b/node_modules/react-native-country-picker-modal/lib/CountryPicker.js
@@ -9,7 +9,7 @@ import { CountryList } from './CountryList';
 const renderFlagButton = (props) => props.renderFlagButton ? (props.renderFlagButton(props)) : (React.createElement(FlagButton, Object.assign({}, props)));
 const renderFilter = (props) => props.renderCountryFilter ? (props.renderCountryFilter(props)) : (React.createElement(CountryFilter, Object.assign({}, props)));
 export const CountryPicker = (props) => {
-    const { countryCode, region, subregion, countryCodes, renderFlagButton: renderButton, renderCountryFilter, filterProps, modalProps, flatListProps, onSelect, withEmoji, withFilter, withCloseButton, withCountryNameButton, withCallingCodeButton, withCurrencyButton, containerButtonStyle, withAlphaFilter, withCallingCode, withCurrency, withFlag, withModal, disableNativeModal, withFlagButton, onClose: handleClose, onOpen: handleOpen, closeButtonImage, closeButtonStyle, closeButtonImageStyle, excludeCountries, placeholder, preferredCountries } = props;
+    const { countryCode, region, subregion, countryCodes, renderFlagButton: renderButton, renderCountryFilter, filterProps, modalProps, flatListProps, onSelect, withEmoji, withFilter, withCloseButton, withCountryNameButton, withCallingCodeButton, withCurrencyButton, containerButtonStyle, withAlphaFilter=false, withCallingCode=false, withCurrency, withFlag, withModal=true, disableNativeModal, withFlagButton, onClose: handleClose, onOpen: handleOpen, closeButtonImage, closeButtonStyle, closeButtonImageStyle, excludeCountries, placeholder='Select Country', preferredCountries } = props;
     const [state, setState] = useState({
         visible: props.visible || false,
         countries: [],
@@ -93,10 +93,10 @@ export const CountryPicker = (props) => {
                 flatListProps,
             })))));
 };
-CountryPicker.defaultProps = {
-    withModal: true,
-    withAlphaFilter: false,
-    withCallingCode: false,
-    placeholder: 'Select Country',
-};
+// CountryPicker.defaultProps = {
+//     withModal: true,
+//     withAlphaFilter: false,
+//     withCallingCode: false,
+//     placeholder: 'Select Country',
+// };
 //# sourceMappingURL=CountryPicker.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-country-picker-modal/lib/Flag.js b/node_modules/react-native-country-picker-modal/lib/Flag.js
index b974950..094d92c 100644
--- a/node_modules/react-native-country-picker-modal/lib/Flag.js
+++ b/node_modules/react-native-country-picker-modal/lib/Flag.js
@@ -45,9 +45,9 @@ const EmojiFlag = memo(({ countryCode, flagSize }) => {
     return (React.createElement(Text, { style: [styles.emojiFlag, { fontSize: flagSize }], allowFontScaling: false },
         React.createElement(Emoji, Object.assign({}, { name: asyncResult.result }))));
 });
-export const Flag = ({ countryCode, withEmoji, withFlagButton, flagSize, }) => withFlagButton ? (React.createElement(View, { style: styles.container }, withEmoji ? (React.createElement(EmojiFlag, Object.assign({}, { countryCode, flagSize }))) : (React.createElement(ImageFlag, Object.assign({}, { countryCode, flagSize }))))) : null;
-Flag.defaultProps = {
-    withEmoji: true,
-    withFlagButton: true,
-};
+export const Flag = ({ countryCode, withEmoji=true, withFlagButton=true, flagSize, }) => withFlagButton ? (React.createElement(View, { style: styles.container }, withEmoji ? (React.createElement(EmojiFlag, Object.assign({}, { countryCode, flagSize }))) : (React.createElement(ImageFlag, Object.assign({}, { countryCode, flagSize }))))) : null;
+// Flag.defaultProps = {
+//     withEmoji: true,
+//     withFlagButton: true,
+// };
 //# sourceMappingURL=Flag.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-country-picker-modal/lib/FlagButton.js b/node_modules/react-native-country-picker-modal/lib/FlagButton.js
index 7ad3e7b..2ab1574 100644
--- a/node_modules/react-native-country-picker-modal/lib/FlagButton.js
+++ b/node_modules/react-native-country-picker-modal/lib/FlagButton.js
@@ -49,7 +49,7 @@ const FlagWithSomething = memo(({ countryCode, withEmoji, withCountryNameButton,
         withCurrencyButton && currency ? (React.createElement(FlagText, null, `(${currency}) `)) : null,
         withCallingCodeButton && callingCode ? (React.createElement(FlagText, null, `+${callingCode}`)) : null));
 });
-export const FlagButton = ({ withEmoji, withCountryNameButton, withCallingCodeButton, withCurrencyButton, withFlagButton, countryCode, containerButtonStyle, onOpen, placeholder, }) => {
+export const FlagButton = ({ withEmoji=true, withCountryNameButton=false, withCallingCodeButton=false, withCurrencyButton=false, withFlagButton=true, countryCode, containerButtonStyle, onOpen, placeholder, }) => {
     const { flagSizeButton: flagSize } = useTheme();
     return (React.createElement(TouchableOpacity, { activeOpacity: 0.7, onPress: onOpen },
         React.createElement(View, { style: [
@@ -68,11 +68,11 @@ export const FlagButton = ({ withEmoji, withCountryNameButton, withCallingCodeBu
                 placeholder,
             })))));
 };
-FlagButton.defaultProps = {
-    withEmoji: true,
-    withCountryNameButton: false,
-    withCallingCodeButton: false,
-    withCurrencyButton: false,
-    withFlagButton: true,
-};
+// FlagButton.defaultProps = {
+//     withEmoji: true,
+//     withCountryNameButton: false,
+//     withCallingCodeButton: false,
+//     withCurrencyButton: false,
+//     withFlagButton: true,
+// };
 //# sourceMappingURL=FlagButton.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-country-picker-modal/lib/HeaderModal.js b/node_modules/react-native-country-picker-modal/lib/HeaderModal.js
index d08566a..7c11e23 100644
--- a/node_modules/react-native-country-picker-modal/lib/HeaderModal.js
+++ b/node_modules/react-native-country-picker-modal/lib/HeaderModal.js
@@ -8,12 +8,12 @@ const styles = StyleSheet.create({
     }
 });
 export const HeaderModal = (props) => {
-    const { withFilter, withCloseButton, closeButtonImage, closeButtonStyle, closeButtonImageStyle, onClose, renderFilter } = props;
+    const { withFilter, withCloseButton=true, closeButtonImage, closeButtonStyle, closeButtonImageStyle, onClose, renderFilter } = props;
     return (React.createElement(View, { style: styles.container },
         withCloseButton && React.createElement(CloseButton, { image: closeButtonImage, style: closeButtonStyle, imageStyle: closeButtonImageStyle, onPress: onClose }),
         withFilter && renderFilter(props)));
 };
-HeaderModal.defaultProps = {
-    withCloseButton: true
-};
+// HeaderModal.defaultProps = {
+//     withCloseButton: true
+// };
 //# sourceMappingURL=HeaderModal.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-country-picker-modal/lib/index.d.ts b/node_modules/react-native-country-picker-modal/lib/index.d.ts
index 50bb70b..4c1efe3 100644
--- a/node_modules/react-native-country-picker-modal/lib/index.d.ts
+++ b/node_modules/react-native-country-picker-modal/lib/index.d.ts
@@ -37,12 +37,17 @@ interface Props {
     onOpen?(): void;
     onClose?(): void;
 }
+const DefaultProps = {
+  onSelect: () => {},
+  withEmoji: false
+}
 declare const Main: {
     ({ theme, translation, ...props }: Props): JSX.Element;
-    defaultProps: {
-        onSelect: () => void;
-        withEmoji: boolean;
-    };
+    defaultProps: typeof DefaultProps;
+    // defaultProps: {
+    //     onSelect: () => void;
+    //     withEmoji: boolean;
+    // };
 };
 export default Main;
 export { getCountriesAsync as getAllCountries, getCountryCallingCodeAsync as getCallingCode, } from './CountryService';
diff --git a/node_modules/react-native-country-picker-modal/lib/index.js b/node_modules/react-native-country-picker-modal/lib/index.js
index 4a47213..7f163f2 100644
--- a/node_modules/react-native-country-picker-modal/lib/index.js
+++ b/node_modules/react-native-country-picker-modal/lib/index.js
@@ -7,10 +7,7 @@ const Main = ({ theme, translation, ...props }) => {
         React.createElement(CountryProvider, { value: { ...DEFAULT_COUNTRY_CONTEXT, translation } },
             React.createElement(CountryPicker, Object.assign({}, props)))));
 };
-Main.defaultProps = {
-    onSelect: () => { },
-    withEmoji: true,
-};
+
 export default Main;
 export { getCountriesAsync as getAllCountries, getCountryCallingCodeAsync as getCallingCode, } from './CountryService';
 export { CountryModal } from './CountryModal';
